const exports = {}
Object.defineProperty(exports, "__esModule", { value: true });

import {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  NotFoundError,
  decompressFromBase64,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  findSync
} from '.././runtime/edge-esm.js'

const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 4.10.1
 * Query Engine version: aead147aa326ccb985dcfed5b065b4fdabd44b19
 */
Prisma.prismaVersion = {
  client: "4.10.1",
  engine: "aead147aa326ccb985dcfed5b065b4fdabd44b19"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.NotFoundError = NotFoundError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = () => (val) => val


/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}


const dirname = '/'

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.JsonNullValueFilter = makeEnum({
  DbNull: Prisma.DbNull,
  JsonNull: Prisma.JsonNull,
  AnyNull: Prisma.AnyNull
});

exports.Prisma.JsonNullValueInput = makeEnum({
  JsonNull: Prisma.JsonNull
});

exports.Prisma.LogScalarFieldEnum = makeEnum({
  id: 'id',
  level: 'level',
  message: 'message',
  meta: 'meta',
  log_type: 'log_type',
  created_at: 'created_at',
  request_id: 'request_id'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.SyncHistoryScalarFieldEnum = makeEnum({
  id: 'id',
  total_rows_imported: 'total_rows_imported',
  total_rows_deleted: 'total_rows_deleted',
  total_row_created: 'total_row_created',
  created_at: 'created_at',
  source: 'source'
});

exports.Prisma.TrainerAltScalarFieldEnum = makeEnum({
  id: 'id',
  trainer_id: 'trainer_id',
  alt_trainer_name: 'alt_trainer_name',
  alt_trainer_code: 'alt_trainer_code',
  order: 'order'
});

exports.Prisma.TrainerScalarFieldEnum = makeEnum({
  id: 'id',
  username: 'username',
  trainer_name: 'trainer_name',
  trainer_code: 'trainer_code',
  created_at: 'created_at',
  source: 'source'
});

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});
exports.Level = makeEnum({
  Info: 'Info',
  Warn: 'Warn',
  Error: 'Error'
});

exports.LogType = makeEnum({
  Request: 'Request',
  Internal: 'Internal'
});

exports.Prisma.ModelName = makeEnum({
  Log: 'Log',
  Trainer: 'Trainer',
  TrainerAlt: 'TrainerAlt',
  SyncHistory: 'SyncHistory'
});

const compressedDMMF = ''
const decompressedDMMF = decompressFromBase64(compressedDMMF)
// We are parsing 2 times, as we want independent objects, because
// DMMFClass introduces circular references in the dmmf object
const dmmf = JSON.parse(decompressedDMMF)
exports.Prisma.dmmf = JSON.parse(decompressedDMMF)

/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/Users/jamesschuler/Dev/pogo-trainer-codes/api/generated/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [],
    "previewFeatures": [
      "deno"
    ],
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": "../../.env",
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "4.10.1",
  "engineVersion": "aead147aa326ccb985dcfed5b065b4fdabd44b19",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "dataProxy": true
}
config.document = dmmf
config.dirname = dirname

config.inlineSchema = 'Ly8gVGhpcyBpcyB5b3VyIFByaXNtYSBzY2hlbWEgZmlsZSwKLy8gbGVhcm4gbW9yZSBhYm91dCBpdCBpbiB0aGUgZG9jczogaHR0cHM6Ly9wcmlzLmx5L2QvcHJpc21hLXNjaGVtYQoKZ2VuZXJhdG9yIGNsaWVudCB7CiAgcHJvdmlkZXIgICAgICAgID0gInByaXNtYS1jbGllbnQtanMiCiAgcHJldmlld0ZlYXR1cmVzID0gWyJkZW5vIl0KICBvdXRwdXQgICAgICAgICAgPSAiLi4vZ2VuZXJhdGVkL2NsaWVudCIKfQoKZGF0YXNvdXJjZSBkYiB7CiAgcHJvdmlkZXIgPSAicG9zdGdyZXNxbCIKICB1cmwgICAgICA9IGVudigiREFUQUJBU0VfVVJMIikKfQoKbW9kZWwgTG9nIHsKICBpZCAgICAgICAgIEludCAgICAgIEBpZCBAZGVmYXVsdChhdXRvaW5jcmVtZW50KCkpCiAgbGV2ZWwgICAgICBMZXZlbAogIG1lc3NhZ2UgICAgU3RyaW5nCiAgbWV0YSAgICAgICBKc29uCiAgbG9nX3R5cGUgICBMb2dUeXBlCiAgY3JlYXRlZF9hdCBEYXRlVGltZSBAZGVmYXVsdChub3coKSkKICByZXF1ZXN0X2lkIFN0cmluZz8KfQoKbW9kZWwgVHJhaW5lciB7CiAgaWQgICAgICAgICAgIEludCAgICAgICAgICBAaWQgQGRlZmF1bHQoYXV0b2luY3JlbWVudCgpKQogIHVzZXJuYW1lICAgICBTdHJpbmcKICB0cmFpbmVyX25hbWUgU3RyaW5nCiAgdHJhaW5lcl9jb2RlIFN0cmluZwogIGNyZWF0ZWRfYXQgICBEYXRlVGltZSAgICAgQGRlZmF1bHQobm93KCkpCiAgYWx0cyAgICAgICAgIFRyYWluZXJBbHRbXQogIHNvdXJjZSAgICAgICBTdHJpbmc/Cn0KCm1vZGVsIFRyYWluZXJBbHQgewogIGlkICAgICAgICAgICAgICAgSW50ICAgICBAaWQgQGRlZmF1bHQoYXV0b2luY3JlbWVudCgpKQogIHRyYWluZXIgICAgICAgICAgVHJhaW5lciBAcmVsYXRpb24oZmllbGRzOiBbdHJhaW5lcl9pZF0sIHJlZmVyZW5jZXM6IFtpZF0pCiAgdHJhaW5lcl9pZCAgICAgICBJbnQKICBhbHRfdHJhaW5lcl9uYW1lIFN0cmluZyAgQHVuaXF1ZQogIGFsdF90cmFpbmVyX2NvZGUgU3RyaW5nICBAdW5pcXVlCiAgb3JkZXIgICAgICAgICAgICBJbnQ/Cn0KCm1vZGVsIFN5bmNIaXN0b3J5IHsKICBpZCAgICAgICAgICAgICAgICAgIEludCAgICAgIEBpZCBAZGVmYXVsdChhdXRvaW5jcmVtZW50KCkpCiAgdG90YWxfcm93c19pbXBvcnRlZCBJbnQKICB0b3RhbF9yb3dzX2RlbGV0ZWQgIEludAogIHRvdGFsX3Jvd19jcmVhdGVkICAgSW50CiAgY3JlYXRlZF9hdCAgICAgICAgICBEYXRlVGltZSBAZGVmYXVsdChub3coKSkKICBzb3VyY2UgICAgICAgICAgICAgIFN0cmluZz8KfQoKZW51bSBMZXZlbCB7CiAgSW5mbwogIFdhcm4KICBFcnJvcgp9CgplbnVtIExvZ1R5cGUgewogIFJlcXVlc3QKICBJbnRlcm5hbAp9Cg=='
config.inlineSchemaHash = 'c11c367693546a059b13475f3b1ca97a974d6d0a4008bcf3128dbf8595296521'

config.inlineDatasources = {
  "db": {
    "url": {
      "fromEnvVar": "DATABASE_URL",
      "value": null
    }
  }
}

config.injectableEdgeEnv = {
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
}

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)
export { exports as default, Prisma, PrismaClient }

